rev reverse
lb load byte
bsub byte subscript
endp end process
diff difference
add add
gcall genral call
in input message
prod product
gt greater than
wsub word subscript
out output message
sub substract
startp start process
outbyte output byte
outword output word
seterr set error
????? ?????
resetch reset channel
csub0 check subscript from 0
????? ?????
stopp stop process
ladd long add
stlb store low prio back pointer
sthf
norm
ldiv
ldpi load ptr to instruction
stlf
xdbl
ldpri
rem
ret
lend
ldtimer
????? ????
????? ????
????? ????
????? ????
????? ????
????? ????
testerr
testpranal
tin
div
????? ????
dist
disc
diss
lmul
not
xor
bcnt
lshr
lshl
lsum
lsub
runp
xword
sb store byte
gajw general adjust workspace
savel
saveh
wcnt
shr
shl
mint minimum integer
alt
altwt
altend
and
enbt
enbc
enbs
love
or
csngl
ccntl1
talt
ldiff
sthb
talwt
sum
mul
sttimer
stoperr
cword
clrhalterr
sethalterr
testhalterr
dup duplicate top of stack
move2dinit
move2dall
move2dnonzero
move2dzero
???? ???
???? ???
???? ???
???? ???
unpacksn
???? ???
???? ???
???? ???
???? ???
???? ???
???? ???
???? ???
???? ???
pastnormsn
roundsn
???? ???
???? ???
ldinf
fmul
cflerr
crcword
crcbyte
bitcnt
bitrevword
bitrevnbits
???? ???
???? ???
???? ???
???? ???
???? ???
???? ???
???? ???
wsubdb
fpldnldbi
fpchkerr
fpstnldb
???? ???
fpldlsni
fpadd
fpstnlsn
fpsub
fpldnldb
fpmul
fpdiv
???? ???
fpldnlsn
fpremfirst
fpremstep
fpnan
fpordered
fpnotfinite
fpgt
fpeq
fpi32tor32
???? ???
fpi32tor64

